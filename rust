L-18 (Oct 2, 2025)

rustfmt:- is a tool that formats Rust code according to style guidelines.

cargo fmt:- is a Cargo command that runs rustfmt on your entire project.

When you type:

cargo build

It means:

“Cargo, please compile my Rust code so I can run it later.”

🧠 Remember These 4 Points

🧩 It compiles your Rust code.

🏗️ It puts the program in a folder called target/debug/.

⚡ It’s used mostly for testing or development.

🧮 Use cargo build --release to make a faster version (for real use).

🧰 Other Useful Commands
Command	What it does
cargo build	Just builds your project
cargo run	Builds and runs your project
cargo check	Only checks for errors (faster!)

The 2 Build Modes in Cargo

When you build a Rust project, there are two main modes:

Mode	Command	When to Use	What It Does
🧱 Debug mode	cargo build	While you’re writing and testing code	Builds fast, but the program runs a bit slower
🚀 Release mode	cargo build --release	When your program is ready to share or publish	Builds slowly, but the program runs much faster

🪄 Think of it like this:

Debug mode = for learning and fixing
Release mode = for speed and final version

📦 What is crates.io?

crates.io is like an app store for Rust code.

It’s a website where Rust developers share packages (called crates).

A crate is just a library or project you can reuse.

Cargo can automatically download these crates for you when you build.

For example, if you add a library like this in your Cargo.toml:

rand = "0.8"


Cargo will go to crates.io, find the rand crate, and download it.

Cargo RUn or cargo r:
Cargo run will run your executable in debug mode

cargo run --quiet: 
Will not show the intermediary steps

cargo buidl just build the executable but not executes it

cargo check → Quickly checks your Rust code for errors without fully building the program (faster than cargo build
